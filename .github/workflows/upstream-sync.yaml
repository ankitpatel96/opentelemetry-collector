name: 'Upstream Sync'

on:
  schedule:
    - cron:  '5 5 * * *'
    # scheduled at 12:00am EST every day

  workflow_dispatch:  # click the button on Github repo!
    inputs:
      sync_test_mode: # Adds a boolean option that appears during manual workflow run for easy test mode config
        description: 'Sync Upstream test mode'
        type: boolean
        default: false
      run_gotests:
        description: 'Run go tests after sync'
        type: boolean
        default: false

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
      - name: Checkout upstream-sync
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          # optional: set the branch to checkout,
          # sync action checks out your 'target_sync_branch' anyway
          ref:  upstream-sync
          # REQUIRED if your upstream repo is private (see wiki)
          persist-credentials: false
      - run: ls -la upstream-sync/
      - name: Get make and github action patches
        id: set-vars-from-patches
        run: |
            echo 'TOPLEVEL_MAKE_PATCH<<EOF' >> $GITHUB_OUTPUT
            cat upstream-sync/toplevel.make >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
            echo 'COMMON_MAKE_PATCH<<EOF' >> $GITHUB_OUTPUT
            cat upstream-sync/common.make >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
            echo 'GITHUB_ACTIONS_PATCH<<EOF' >> $GITHUB_OUTPUT
            cat upstream-sync/github-actions.yaml >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          # optional: set the branch to checkout,
          # sync action checks out your 'target_sync_branch' anyway
          ref:  main
          # REQUIRED if your upstream repo is private (see wiki)
          persist-credentials: false
      # REQUIRED step
      # Step 2: run the sync action
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          target_sync_branch: main
          # REQUIRED 'target_repo_token' exactly like this!
          target_repo_token: ${{ secrets.WORKFLOW_TOKEN }}
          upstream_sync_branch: main
          upstream_sync_repo: open-telemetry/opentelemetry-collector
          # Set test_mode true during manual dispatch to run tests instead of the true action!!
          test_mode: ${{ inputs.sync_test_mode }}
      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          ref: main
          persist-credentials: false
      # need newlines at the end of these patches
      - name: Patch make
        run: echo '${{ steps.set-vars-from-patches.outputs.TOPLEVEL_MAKE_PATCH }}' >> Makefile && echo '${{ steps.set-vars-from-patches.outputs.COMMON_MAKE_PATCH }}' >> Makefile.Common
      # need newlines at the end of these patches
      - name: Store github actions patch
        run: echo '${{ steps.set-vars-from-patches.outputs.GITHUB_ACTIONS_PATCH }}' >> blah.patch && cat blah.patch
      # use the yq github action to patch the build-and-test workflow to add the datadog junit upload to the bottom of the unittest-matrix job
      - name: Patch github actions from file
        uses: mikefarah/yq@master
        with:
      # use yq to get the current value of the GITHUB_ACTIONS_PATCH output variable and append the new patch to the end of the file
          cmd: yq -i e '.jobs.unittest-matrix.steps += load("blah.patch")' .github/workflows/build-and-test.yml && rm blah.patch
      - name: check
        run: git status
      - name: Commit changes
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          git config --global user.name "Ankit Patel"
          git config --global user.email "ankit.patel@datadoghq.com"
          git checkout -b main-upstream-patched
          git add Makefile Makefile.Common .github/workflows/build-and-test.yml
          git commit -m "temporary testing patch"
      - name: push changes
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          git push --set-upstream origin main-upstream-patched
      - name: pr create changes
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          gh pr create --base main --head main-upstream-patched --title "Test Upstream" --body "This is a PR to test upstream main"