name: 'Upstream Sync'

on:
  schedule:
    - cron:  '5 5 * * *'
    # scheduled at 12:00am EST every day

  workflow_dispatch:  # click the button on Github repo!
    inputs:
      sync_test_mode: # Adds a boolean option that appears during manual workflow run for easy test mode config
        description: 'Sync Upstream test mode'
        type: boolean
        default: false
      run_gotests:
        description: 'Run go tests after sync'
        type: boolean
        default: false

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
      # REQUIRED step
      # Step 1: run a standard checkout action, provided by github
      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          # optional: set the branch to checkout,
          # sync action checks out your 'target_sync_branch' anyway
          ref:  main
          # REQUIRED if your upstream repo is private (see wiki)
          persist-credentials: false

      # REQUIRED step
      # Step 2: run the sync action
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          target_sync_branch: main
          # REQUIRED 'target_repo_token' exactly like this!
          target_repo_token: ${{ secrets.WORKFLOW_TOKEN }}
          upstream_sync_branch: main
          upstream_sync_repo: open-telemetry/opentelemetry-collector

          # Set test_mode true during manual dispatch to run tests instead of the true action!!
          test_mode: ${{ inputs.sync_test_mode }}

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          ref: main
          # REQUIRED if your upstream repo is private (see wiki)
          persist-credentials: false
      # Step 3: Display a sample message based on the sync output var 'has_new_commits'
      - name: New commits found
        if: steps.sync.outputs.has_new_commits == 'true' || inputs.run_gotests
        run: cat upstream-sync/toplevel.make >> Makefile && cat upstream-sync/common.make >> Makefile.Common && make gotest-junit